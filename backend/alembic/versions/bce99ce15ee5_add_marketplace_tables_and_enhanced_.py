"""Add marketplace tables and enhanced provider profiles

Revision ID: bce99ce15ee5
Revises: add_chat_message_columns
Create Date: 2025-10-13 15:31:15.533517

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bce99ce15ee5'
down_revision: Union[str, None] = 'add_chat_message_columns'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('marketplace_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('service_type', sa.String(), nullable=False),
    sa.Column('pet_ids', sa.JSON(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('preferred_dates', sa.JSON(), nullable=True),
    sa.Column('budget_min', sa.Integer(), nullable=True),
    sa.Column('budget_max', sa.Integer(), nullable=True),
    sa.Column('experience_years_min', sa.Integer(), nullable=True),
    sa.Column('languages', sa.JSON(), nullable=True),
    sa.Column('special_requirements', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('is_urgent', sa.Boolean(), nullable=False),
    sa.Column('views_count', sa.Integer(), nullable=False),
    sa.Column('responses_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_marketplace_posts_id'), 'marketplace_posts', ['id'], unique=False)
    op.create_table('provider_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('languages', sa.JSON(), nullable=True),
    sa.Column('hourly_rate', sa.Float(), nullable=True),
    sa.Column('service_radius_km', sa.Integer(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('available_days', sa.JSON(), nullable=True),
    sa.Column('available_hours_start', sa.String(), nullable=True),
    sa.Column('available_hours_end', sa.String(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('certifications', sa.JSON(), nullable=True),
    sa.Column('insurance_info', sa.Text(), nullable=True),
    sa.Column('average_rating', sa.Float(), nullable=True),
    sa.Column('total_reviews', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_provider_profiles_id'), 'provider_profiles', ['id'], unique=False)
    op.create_table('marketplace_post_pets',
    sa.Column('marketplace_post_id', sa.Integer(), nullable=False),
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['marketplace_post_id'], ['marketplace_posts.id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], ),
    sa.PrimaryKeyConstraint('marketplace_post_id', 'pet_id')
    )
    op.create_table('provider_profile_services',
    sa.Column('provider_profile_id', sa.Integer(), nullable=False),
    sa.Column('service_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['provider_profile_id'], ['provider_profiles.id'], ),
    sa.ForeignKeyConstraint(['service_type_id'], ['service_types.id'], ),
    sa.PrimaryKeyConstraint('provider_profile_id', 'service_type_id')
    )
    op.add_column('chat_messages', sa.Column('message_metadata', sa.JSON(), nullable=True))
    op.add_column('chat_messages', sa.Column('delivery_status', sa.String(), nullable=False))
    op.add_column('chat_messages', sa.Column('delivered_at', sa.DateTime(), nullable=True))
    op.add_column('chat_messages', sa.Column('read_at', sa.DateTime(), nullable=True))
    op.add_column('provider_reviews', sa.Column('reviewer_id', sa.Integer(), nullable=False))
    op.add_column('provider_reviews', sa.Column('title', sa.String(), nullable=True))
    op.add_column('provider_reviews', sa.Column('service_type', sa.String(), nullable=False))
    # Note: SQLite doesn't support ALTER COLUMN, so we skip this change
    # The rating column will remain as SMALLINT in SQLite
    op.drop_index('ix_provider_reviews_provider_id', table_name='provider_reviews')
    op.drop_index('ix_provider_reviews_user_id', table_name='provider_reviews')
    op.drop_constraint(None, 'provider_reviews', type_='foreignkey')
    op.drop_constraint(None, 'provider_reviews', type_='foreignkey')
    op.create_foreign_key(None, 'provider_reviews', 'provider_profiles', ['provider_id'], ['id'])
    op.create_foreign_key(None, 'provider_reviews', 'users', ['reviewer_id'], ['id'])
    op.drop_column('provider_reviews', 'user_id')
    op.add_column('providers', sa.Column('rating_count', sa.Integer(), nullable=True))
    op.drop_column('providers', 'services')
    op.add_column('service_requests', sa.Column('assigned_provider_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'service_requests', 'users', ['assigned_provider_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'service_requests', type_='foreignkey')
    op.drop_column('service_requests', 'assigned_provider_id')
    op.add_column('providers', sa.Column('services', sa.TEXT(), nullable=True))
    op.drop_column('providers', 'rating_count')
    op.add_column('provider_reviews', sa.Column('user_id', sa.INTEGER(), nullable=False))
    op.drop_constraint(None, 'provider_reviews', type_='foreignkey')
    op.drop_constraint(None, 'provider_reviews', type_='foreignkey')
    op.create_foreign_key(None, 'provider_reviews', 'providers', ['provider_id'], ['id'])
    op.create_foreign_key(None, 'provider_reviews', 'users', ['user_id'], ['id'])
    op.create_index('ix_provider_reviews_user_id', 'provider_reviews', ['user_id'], unique=False)
    op.create_index('ix_provider_reviews_provider_id', 'provider_reviews', ['provider_id'], unique=False)
    # Note: SQLite doesn't support ALTER COLUMN, so we skip this change
    # The rating column will remain as SMALLINT in SQLite
    op.drop_column('provider_reviews', 'service_type')
    op.drop_column('provider_reviews', 'title')
    op.drop_column('provider_reviews', 'reviewer_id')
    op.drop_column('chat_messages', 'read_at')
    op.drop_column('chat_messages', 'delivered_at')
    op.drop_column('chat_messages', 'delivery_status')
    op.drop_column('chat_messages', 'message_metadata')
    op.drop_table('provider_profile_services')
    op.drop_table('marketplace_post_pets')
    op.drop_index(op.f('ix_provider_profiles_id'), table_name='provider_profiles')
    op.drop_table('provider_profiles')
    op.drop_index(op.f('ix_marketplace_posts_id'), table_name='marketplace_posts')
    op.drop_table('marketplace_posts')
    # ### end Alembic commands ###
